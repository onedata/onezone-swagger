post:
  operationId: create_temporary_token_for_provider
  tags:
    - Token
  x-onedata-gri:
    type: od_token
    id: undefined
    aspect: "{provider_temporary_token, ?BINDING(id)}"
  x-onedata-permissions:
    - oz_tokens_manage
  summary: Create temporary token for a provider
  x-bash-codegen-description: |
    Creates a new temporary token for specific provider. Temporary tokens must be
    confined with a time caveat and are not persisted (cannot be retrieved, listed,
    revoked, updated or deleted). However, it is possible to revoke all
    existing temporary tokens of the provider:
    [see more](#operation/revoke_all_temporary_tokens_of_provider)).

    This operation is available for the subject provider (`id`), or the provider's
    cluster member with `cluster_update` privilege. Otherwise requires
    `oz_tokens_manage` admin privilege.
  description: |
    Creates a new temporary token for specific provider. Temporary tokens must be
    confined with a time caveat and are not persisted (cannot be retrieved, listed,
    revoked, updated or deleted). However, it is possible to revoke all
    existing temporary tokens of the provider:
    [see more](#operation/revoke_all_temporary_tokens_of_provider)).

    This operation is available for the subject provider (`id`), or the provider's
    cluster member with `cluster_update` privilege. Otherwise requires
    `oz_tokens_manage` admin privilege.

    You can learn more about named and temporary tokens
    [here](https://onedata.org/#/home/documentation/doc/using_onedata/tokens[named-and-temporary-tokens].html).

    ***Example cURL requests***

    **Create temporary token for a provider**
    ```bash
    curl -H "x-auth-token: $TOKEN" -X POST \
    -d '{"type": {"accessToken":{}}, "caveats": [{"type": "time", "validUntil": 1571147494}]}' \
    -H 'Content-type: application/json' \
    https://$ZONE_HOST/api/v3/onezone/providers/$PROVIDER_ID/tokens/temporary
    ```
  consumes:
    - application/json
  responses:
    '201':
      description: Returns the newly created temporary token in serialized form.
      schema:
        type: object
        properties:
          token:
            $ref: '#/definitions/SerializedToken'
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '401':
      description: Authentication error.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Authorization error.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: Resource not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server Error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
    - name: id
      in: path
      description: Provider Id
      type: string
      required: true
    - name: data
      in: body
      description: Properties of the new temporary token.
      schema:
        $ref: '#/definitions/TemporaryTokenCreateRequest'
      required: true
  x-code-samples:
    - lang: Shell
      source: "onezone-rest-cli createTemporaryTokenForProvider id=6ebe7ac282e0188b5336b5d8cfa564d5"


get:
  operationId: get_temporary_token_generation_of_provider
  tags:
    - Token
  x-onedata-gri:
    type: temporary_token_secret
    id: ?BINDING(id)
    aspect: provider
    scope: shared
  summary: Get temporary token generation of a provider
  x-bash-codegen-description: |
    Returns the generation of temporary tokens of a specific provider. The
    generation is an increasing number that denotes the generation of shared
    token secret - if the secret changes (temporary tokens are revoked), the
    generation is incremented.

    This operation is available for the subject provider (`id`), or the provider's
    cluster member. Otherwise requires `oz_tokens_manage` admin privilege.
  description: |
    Returns the generation of temporary tokens of a specific provider. The
    generation is an increasing number that denotes the generation of shared
    token secret - if the secret changes (temporary tokens are revoked), the
    generation is incremented.

    This operation is available for the subject provider (`id`), or the provider's
    cluster member. Otherwise requires `oz_tokens_manage` admin privilege.

    ***Example cURL requests***

    **Get temporary token generation of a provider**
    ```bash
    curl -H "x-auth-token: $TOKEN" -X GET \
    https://$ZONE_HOST/api/v3/onezone/providers/$PROVIDER_ID/tokens/temporary

    {
      "generation": 3
    }
    ```
  produces:
    - application/json
  responses:
    '200':
      description: Returns the current temporary token generation.
      schema:
        $ref: '#/definitions/TemporaryTokenGeneration'
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '401':
      description: Authentication error.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Authorization error.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: Resource not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server Error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
    - name: id
      in: path
      description: User Id
      type: string
      required: true
  x-code-samples:
    - lang: Shell
      source: "onezone-rest-cli getTemporaryTokenGenerationOfProvider id=6ebe7ac282e0188b5336b5d8cfa564d5"


delete:
  operationId: revoke_all_temporary_tokens_of_provider
  tags:
    - Token
  x-onedata-gri:
    type: od_token
    id: undefined
    aspect: "{provider_temporary_tokens, ?BINDING(id)}"
  x-onedata-permissions:
    - oz_tokens_manage
  summary: Revoke all temporary tokens of a provider
  x-bash-codegen-description: |
    Immediately revokes (invalidates) all temporary tokens belonging
    to a specific provider. The operation cannot be undone.

    This operation is available for the subject provider (`id`), or the provider's
    cluster member with `cluster_update` privilege. Otherwise requires
    `oz_tokens_manage` admin privilege.
  description: |
    Immediately revokes (invalidates) all temporary tokens belonging
    to a specific provider. The operation cannot be undone.

    This operation is available for the subject provider (`id`), or the provider's
    cluster member with `cluster_update` privilege. Otherwise requires
    `oz_tokens_manage` admin privilege.

    You can learn more about named and temporary tokens
    [here](https://onedata.org/#/home/documentation/doc/using_onedata/tokens[named-and-temporary-tokens].html).

    ***Example cURL requests***

    **Revoke all temporary tokens of a provider**
    ```bash
    curl -H "x-auth-token: $TOKEN" -X DELETE \
    https://$ZONE_HOST/api/v3/onezone/providers/$PROVIDER_ID/tokens/temporary
    ```
  produces:
    - application/json
  responses:
    '204':
      description: The temporary tokens have been revoked.
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '401':
      description: Authentication error.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Authorization error.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: Resource not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server Error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
    - name: id
      in: path
      description: Provider Id
      type: string
      required: true
  x-code-samples:
    - lang: Shell
      source: "onezone-rest-cli revokeAllTemporaryTokensOfProvider id=6ebe7ac282e0188b5336b5d8cfa564d5"