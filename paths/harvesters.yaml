get:
  operationId: oz_harvesters_list
  tags:
    - Harvester
  x-onedata-gri:
    type: od_harvester
    aspect: list
  x-onedata-permissions:
    - oz_harvesters_list
  summary: List all harvesters
  x-bash-codegen-description: |
    Returns the list of all harvesters managed by the Onezone service.

    This operation requires `oz_harvesters_list` admin privilege.
  description: |
    Returns the list of all harvesters managed by the Onezone service.

    This operation requires `oz_harvesters_list` admin privilege.

    ***Example cURL requests***

    **List all harvesters**
    ```bash
    curl -u admin:password -X GET \
    https://$HOST/api/v3/onezone/harvesters

    {
      "harvesters": [
        "S0Y9FSe9TFJFFzzLtBEs8",
        "IkHBv8CoAFmbFU4fj26"
      ]
    }
    ```
  produces:
    - application/json
  responses:
    '200':
      description: List of harvesters Ids.
      schema:
        $ref: '#/definitions/Harvesters'
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '401':
      description: Authentication error.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Authorization error.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: Resource not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server Error.
      schema:
        $ref: '#/definitions/Error'
  x-code-samples:
  - lang: Shell
    source: "onezone-rest-cli listHarvesters"


post:
  operationId: create_harvester
  tags:
    - Harvester
  x-onedata-gri:
    type: od_harvester
    aspect: instance
  x-onedata-permissions:
    - oz_harvesters_create
  summary: Create new harvester
  x-bash-codegen-description: |
    Creates new harvester.

    This operation requires `oz_harvesters_create` admin privilege.
  description: |
    Creates new harvester.

    This operation requires `oz_harvesters_create` admin privilege.
    
    See also:  
    [Create a new harvester for the current user](#operation/create_user_harvester)  
    [Create a new harvester for given group](#operation/create_harvester_for_group)  

    ***Example cURL requests***

    **Create new harvester**
    ```bash
    curl -u username:password  -H "Content-type: application/json" \
    -X POST -d '{ "name" : "new_harvester", "endpoint" : "https://example.elastic.com", "plugin" : "elasticsearch_plugin"  \
    "config" : { "typeMapping": [ { "id": 0, "name": "Type 1" }, { "id": 1, "name": "Type 1" } ],
                 "externalHelpLink": "http://example.com/some_help_page",
                 "refreshDataTimeout": 1000 }, \
    "entryTypeField" : "type", "acceptedEntryTypes" : ["study", "data_object"], "defaultEntryType" : "study" }' \
    https://$HOST/api/v3/onezone/harvesters
    ```
  consumes:
    - application/json
  responses:
    '201':
      description: >
        URI of the created harvester in the form https://$HOST/api/onezone/v3/harvesters/{id} is
        returned in the response `Location` header.
      headers:
        Location:
          description: URI of the created harvester.
          type: string
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '401':
      description: Authentication error.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Authorization error.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: Resource not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server Error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
    - name: data
      in: body
      description: Harvester properties.
      schema:
        $ref: '#/definitions/HarvesterCreateRequest'
      required: true
  x-code-samples:
  - lang: Shell
    source: "onezone-rest-cli createHarvester name==\"Harvester 1\" endpoint== \"https://example.elastic.com\" plugin==\"elasticsearch_plugin\"
    config=={
    \"typeMapping\": [ { \"id\": 0, \"name\": \"Type 1\" }, { \"id\": 1, \"name\": \"Type 1\" } ],
    \"externalHelpLink\": \"http://example.com/some_help_page\",
    \"refreshDataTimeout\": 1000
  } entryTypeField== \"type\" acceptedEntryTypes==[\"study\", \"data_object\"] defaultEntryType: \"study\""
