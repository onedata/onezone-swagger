get:
  operationId: get_provider
  tags:
    - Provider
  x-onedata-service: onezone
  x-onedata-module: provider
  x-onedata-resource: provider
  x-onedata-method: provider_logic:get_data
  summary: Get provider details
  description: |
    Returns information about the Oneprovider that performed the request 
    (based on provided Peer Certificate authentication).

    This operation requires peer certificate authentication.

    ***Example cURL requests***

    **Get information about provider**
    ```bash
    curl -k --cert ./etc/op_worker/certs/grpcert.pem \
    https://$HOST:8443/api/v3/onezone/provider

    {
      "clientName": "example",
      "providerId": "H8ez0CwDZ7JMYRWn1ipmBpgJHPXzIXj0__-upGkf9tk",
      "urls": ["195.216.97.151"],
      "redirectionPoint": "https://195.216.97.151",
      "latitude": 50.068968,
      "longitude": 19.909444
    }
    ```
  produces:
    - application/json
  responses:
    '200':
      description: Returns the information about Oneprovider.
      schema:
        $ref: '#/definitions/ProviderDetails'
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '401':
      description: Authentication error.
      schema:
        $ref: '#/definitions/Error'  
    '403':
      description: Authorization error.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: Resource not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server Error.
      schema:
        $ref: '#/definitions/Error'


post:
  operationId: register_provider
  tags:
    - Provider
  x-onedata-service: onezone
  x-onedata-module: provider
  x-onedata-resource: provider
  x-onedata-method: provider_logic:create
  summary: Register provider
  description: |
    Registers a Oneprovider in Onezone service. 
    
    Requires a valid CSR in the bodyand returns signed 
    certificate that will must used by the Oneprovider for authorization (SSL Peer Certificate).

    This operation has public access.
  consumes:
    - application/json
  responses:
    '200':
      description: Provider registered successfully.
      schema:
        type: object
        properties:
          id: 
            description: The ID of the registered provider
            type: string
          cert:
            description: The signed certificate to be used when connecting to Onezone services.
            type: string
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '401':
      description: Authentication error.
      schema:
        $ref: '#/definitions/Error'  
    '403':
      description: Authorization error.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: Resource not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server Error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
  - name: data
    in: body
    description: Provider reqistration request including CSR.
    schema:
      $ref: '#/definitions/ProviderRegistrationRequest'
    required: true


patch:
  operationId: modify_provider
  tags:
    - Provider
  x-onedata-service: onezone
  x-onedata-module: provider
  x-onedata-resource: provider
  x-onedata-method: provider_logic:modify
  summary: Modify provider details
  description: |
    Updates information about the Oneprovider identified by the
    peer certificate used for the request.

    ***Example cURL requests***

    **Update provider geo location**
    ```bash
    curl -k --cert ./etc/op_worker/certs/grpcert.pem -X PATCH \
    -d '{"latitude":50.068968,"longitude":20.909444}'  \
    https://$HOST:8443/api/v3/onezone/provider
    ```
  consumes:
    - application/json
  responses:
    '204':
      description: Provider details updated successfully.
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '401':
      description: Authentication error.
      schema:
        $ref: '#/definitions/Error'  
    '403':
      description: Authorization error.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: Resource not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server Error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
  - name: data
    in: body
    description: Provider data.
    schema:
      $ref: '#/definitions/ProviderDetails'
    required: true


delete:
  operationId: delete_provider
  tags:
    - Provider
  x-onedata-service: onezone
  x-onedata-module: provider
  x-onedata-resource: provider
  x-onedata-method: provider_logic:remove
  summary: Unregister provider
  description: |
    Allows Oneprovider service to unregister from Onezone.

    This operation allows a Oneprovider to unregister from a this Onezone, i.e. it can only be invoked
    by Oneprovider which wants to unregister. It does't require any parameters, as the provider is
    identified by the peer certificate used for this connection.

    ***Example cURL requests***

    **Unregister provider from Onezone**
    ```bash
    curl -k --cert ./etc/op_worker/certs/grpcert.pem -X DELETE  \
    https://$HOST:8443/api/v3/onezone/provider
    ```
  consumes:
    - application/json
  responses:
    '202':
      description: Provider will be unregistered.
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '401':
      description: Authentication error.
      schema:
        $ref: '#/definitions/Error'  
    '403':
      description: Authorization error.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: Resource not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server Error.
      schema:
        $ref: '#/definitions/Error'

